// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toc 1`] = `
"# library1 API References

## Table Of Contents

- [Function](#function)
  - [add](#add)
- [Interface](#interface)
  - [Calculatable](#calculatable)
- [Class](#class)
  - [Calculator](#calculator)
- [Variable](#variable)
  - [Config](#config)
  - [VERSION](#version)
- [Enum](#enum)
  - [ErrorCodes](#errorcodes)
  - [TokenChars](#tokenchars)
- [TypeAlias](#typealias)
  - [FallbackLocale](#fallbacklocale)
  - [Locale](#locale)
  - [LocaleMessage](#localemessage)

## Function

### add

add function : \`x\`

**Signature:**
\`\`\`typescript
export declare function add(a: number, b: number): number;
\`\`\`

#### Parameters

| Parameter | Type | Description |
| --- | --- | --- |
| a | number | target \`1\` |
| b | number | target 2 |

#### Returns

 result as \`a\` + \`b\`

#### Throws

- \`SyntaxError\` this is syntax error
- \`Error\` this is general error

#### Remarks

This is add function remarks: [ErrorCodes](#errorcodes). See [add](https://foo.bar.com/api/add).

#### Examples

example of \`add\` function:
\`\`\`javascript
console.log(add(1, 1))
\`\`\`



## Interface

### Calculatable

Calculatable interface

**Signature:**
\`\`\`typescript
export interface Calculatable 
\`\`\`


#### Methods

##### add

add method

**Signature:**
\`\`\`typescript
add(a: number, b: number): number;
\`\`\`

*Parameters*

| Parameter | Type | Description |
| --- | --- | --- |
| a | number | target 1 |
| b | number | target 2 |


#### Properties

##### PI

PI

**Signature:**
\`\`\`typescript
PI: number;
\`\`\`



## Class

### Calculator

Calculator class

**Signature:**
\`\`\`typescript
export declare class Calculator implements Calculatable 
\`\`\`

### Remarks

This is remarks of Calculator class

### Examples


\`\`\`javascript
const c = new Calculator()
const v1 = c.add(1, 1)
const v2 = c.sub(1, 1)
\`\`\`



#### Constructor

Conssutructor of usage

**Signature:**
\`\`\`typescript
constructor(type: string);
\`\`\`


#### Methods

##### add

add method

**Signature:**
\`\`\`typescript
add(a: number, b: number): number;
\`\`\`

*Parameters*

| Parameter | Type | Description |
| --- | --- | --- |
| a | number | target 1 |
| b | number | target 2 |

##### sub

sub method

**Signature:**
\`\`\`typescript
sub(a: number, b: number): number;
\`\`\`

*Parameters*

| Parameter | Type | Description |
| --- | --- | --- |
| a | number | target 1 |
| b | number | target 2 |


#### Properties

##### PI

PI

**Signature:**
\`\`\`typescript
PI: number;
\`\`\`

##### type

calcurator types 'simple'

**Signature:**
\`\`\`typescript
type: string;
\`\`\`



## Variable

### Config

Configrations 

**Signature:**
\`\`\`typescript
Config: {
    [name: string]: unknown;
}
\`\`\`

### VERSION

app version

**Signature:**
\`\`\`typescript
VERSION = \\"1.0.0\\"
\`\`\`

#### Remarks

you can lookup application version that is semver format.

#### Examples


\`\`\`javascript
console.log(VERSION)
\`\`\`



## Enum

### ErrorCodes

Error Code

**Signature:**
\`\`\`typescript
export declare enum ErrorCodes 
\`\`\`

#### Members

| Member | Value| Description |
| --- | --- | --- |
| InvalidFormat | 1 | Invalid format |
| Succcess | 0 | Success |

### TokenChars

Token Characters

**Signature:**
\`\`\`typescript
export declare enum TokenChars 
\`\`\`

#### Members

| Member | Value| Description |
| --- | --- | --- |
| Modulo | \\"%\\" | Modulo charactor |
| Plus | \\"+\\" | Plus charactor |

#### Remarks

This is remarks of Token Chararaceters


## TypeAlias

### FallbackLocale

Falback Locale

**Signature:**
\`\`\`typescript
export declare type FallbackLocale = Locale | Locale[] | {
    [locale in string]: Locale[];
} | false;
\`\`\`

#### Remarks

This is remarks of \`Fallback Locale\`

### Locale

Locale

**Signature:**
\`\`\`typescript
export declare type Locale = string;
\`\`\`

### LocaleMessage

Locale Message resources

**Signature:**
\`\`\`typescript
export declare type LocaleMessage = string | LocaleMessage[];
\`\`\`


"
`;
